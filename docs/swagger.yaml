definitions:
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Category:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.ListPostsPrivateRow:
    properties:
      category_id:
        type: string
      category_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      subtitle:
        type: string
      tags: {}
      title:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.ListPostsPublicRow:
    properties:
      category_id:
        type: string
      category_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      subtitle:
        type: string
      tags: {}
      title:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.ListUsersRow:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post:
    properties:
      category_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      publicated:
        type: boolean
      subtitle:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.PostsTag:
    properties:
      created_at:
        type: string
      id:
        type: string
      post_id:
        type: string
      tag_id:
        type: string
      updated_at:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Tag:
    properties:
      created_at:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  internal_api.createCategoryRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  internal_api.createPostRequest:
    properties:
      category_id:
        type: string
      content:
        type: string
      publicated:
        type: boolean
      subtitle:
        type: string
      title:
        type: string
    required:
    - category_id
    - content
    - subtitle
    - title
    type: object
  internal_api.createPostTag:
    properties:
      post_id:
        type: string
      tag_id:
        type: string
    required:
    - post_id
    - tag_id
    type: object
  internal_api.createUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  internal_api.loginUserRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  internal_api.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        type: string
      user_id:
        type: string
    type: object
  internal_api.updateCategoryRequestData:
    properties:
      name:
        type: string
    type: object
  internal_api.updatePostRequest:
    properties:
      category_id:
        type: string
      content:
        $ref: '#/definitions/pgtype.Text'
      publicated:
        $ref: '#/definitions/pgtype.Bool'
      subtitle:
        $ref: '#/definitions/pgtype.Text'
      title:
        $ref: '#/definitions/pgtype.Text'
    type: object
  internal_api.updateUserRequestData:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  internal_api.userResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  pgtype.Bool:
    properties:
      bool:
        type: boolean
      valid:
        type: boolean
    type: object
  pgtype.Text:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /admin/category-post/{id}:
    get:
      consumes:
      - application/json
      description: Recive the one post on the admin panel by Category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      security:
      - JWT: []
      summary: Get a Post by Category Private
      tags:
      - post
      - list
  /admin/post:
    post:
      consumes:
      - application/json
      description: Create a new Post
      parameters:
      - description: post Data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/internal_api.createPostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      security:
      - JWT: []
      summary: Create a new Post
      tags:
      - post
      - create
  /admin/post-tag:
    post:
      consumes:
      - application/json
      description: Create a new PostTag
      parameters:
      - description: post_tag Data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/internal_api.createPostTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.PostsTag'
      security:
      - JWT: []
      summary: Create a new PostTag
      tags:
      - post_tag
      - create
  /admin/post-tag/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one post_tag on the admin panel
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.PostsTag'
      security:
      - JWT: []
      summary: Delete a PostTag by Id
      tags:
      - post_tag
      - delete
  /admin/post/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one post on the admin panel
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      security:
      - JWT: []
      summary: Delete a Post by Id
      tags:
      - post
      - delete
    get:
      consumes:
      - application/json
      description: Recive the one post on the admin panel
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      security:
      - JWT: []
      summary: Get a Post by Id Private
      tags:
      - post
      - get
    put:
      consumes:
      - application/json
      description: Update a new Post
      parameters:
      - description: post Data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/internal_api.updatePostRequest'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      security:
      - JWT: []
      summary: Update a Post
      tags:
      - post
      - update
  /admin/posts:
    get:
      description: Recive all posts on the admin panel
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.ListPostsPrivateRow'
      security:
      - JWT: []
      summary: List all Posts Private
      tags:
      - post
      - list
  /admin/tag-post/{id}:
    get:
      consumes:
      - application/json
      description: Recive the one post on the admin panel by Tag
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      security:
      - JWT: []
      summary: Get a Post by tag Private
      tags:
      - post
      - list
  /categories:
    get:
      consumes:
      - application/json
      description: Recive all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Category'
      summary: List Categories
      tags:
      - category
      - list
  /category:
    post:
      consumes:
      - application/json
      description: Create a new Category
      parameters:
      - description: Category Data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/internal_api.createCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Category'
      security:
      - JWT: []
      summary: Create a new Category
      tags:
      - category
      - create
  /category-post/{id}:
    get:
      consumes:
      - application/json
      description: Recive the one post by Category
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      summary: Get a Post by Category Public
      tags:
      - post
      - list
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the category register
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - JWT: []
      summary: Delete Category
      tags:
      - category
      - delete
    get:
      consumes:
      - application/json
      description: Recive the one category information from a id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Category'
      summary: Get a Category
      tags:
      - category
      - get
    put:
      consumes:
      - application/json
      description: Update the category information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Category Data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/internal_api.updateCategoryRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Category'
      security:
      - JWT: []
      summary: Update Category
      tags:
      - category
      - update
  /login:
    post:
      consumes:
      - application/json
      description: Login a user and return access token a refresh token
      parameters:
      - description: User Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.loginUserResponse'
      summary: Login User
      tags:
      - user
      - login
  /post/{id}:
    get:
      consumes:
      - application/json
      description: Recive the one post public
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      summary: Get a Post by Id Public
      tags:
      - post
      - get
  /posts:
    get:
      description: Recive all posts publics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.ListPostsPublicRow'
      summary: List all Posts
      tags:
      - post
      - list
  /tag:
    post:
      consumes:
      - multipart/form-data
      description: Create a new Tag, the image are upload to S3 services
      parameters:
      - description: This is the tag name
        in: formData
        name: name
        required: true
        type: string
      - description: This is a image
        in: formData
        name: logo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Tag'
      security:
      - JWT: []
      summary: Create a new Tag
      tags:
      - tag
      - create
  /tag-post/{id}:
    get:
      consumes:
      - application/json
      description: Recive the one post by Tag
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Post'
      summary: Get a Post by tag Public
      tags:
      - post
      - list
  /tag/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the tag register
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - JWT: []
      summary: Delete Tag
      tags:
      - tag
      - delete
    get:
      consumes:
      - application/json
      description: Recive the one tag information from a id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Tag'
      summary: Get a Tag
      tags:
      - tag
      - get
  /tags:
    get:
      consumes:
      - application/json
      description: Recive all tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.Tag'
      summary: List Tags
      tags:
      - tag
      - list
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.userResponse'
      security:
      - JWT: []
      summary: Create a new User
      tags:
      - user
      - create
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the user register
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - JWT: []
      summary: Delete User
      tags:
      - user
      - delete
    get:
      consumes:
      - application/json
      description: Recive the one user information from a id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.User'
      security:
      - JWT: []
      summary: Get a User
      tags:
      - user
      - get
    put:
      consumes:
      - application/json
      description: Update the user information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_api.updateUserRequestData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api.userResponse'
      security:
      - JWT: []
      summary: Update User
      tags:
      - user
      - update
  /users:
    get:
      consumes:
      - application/json
      description: Recive all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_JairoRiver_personal_blog_backend_internal_db_sqlc.ListUsersRow'
      security:
      - JWT: []
      summary: List Users
      tags:
      - user
      - list
securityDefinitions:
  JWT:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
